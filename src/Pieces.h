#pragma once

#include <stdlib.h>
#include <stdio.h>

static int Pieces[][4][5][5] = {
    // PIECE 1
    {
        {
            {1}
        },
    },
    // PIECE 2
    {
        {
            {1},
            {1}
        },
        {
            {1, 1},
        },
    },
    // PIECE 3
    {
        {
            {1},
            {1},
            {1}
        },
        {
            {1, 1, 1},
        },
    },
    // PIECE 4
    {
        {
            {1, 0},
            {1, 1}
        },
        {
            {1, 1},
            {1, 0}
        },
        {
            {1, 1},
            {0, 1}
        },
        {
            {0, 1},
            {1, 1}
        },
    },
    // PIECE 5
    {
        {
            {1},
            {1},
            {1},
            {1},
        },
        {
            {1, 1, 1, 1}
        }
    },
    // PIECE 6
    {
        {
            {0, 1},
            {0, 1},
            {1, 1},
        },
        {
            {1, 0, 0},
            {1, 1, 1},
        },
        {
            {1, 1},
            {1, 0},
            {1, 0},
        },
        {
            {1, 1, 1},
            {0, 0, 1},
        },
    },
    // PIECE 7
    {
        {
            {1, 0},
            {1, 1},
            {1, 0},
        },
        {
            {1, 1, 1},
            {0, 1, 0},
        },
        {
            {0, 1},
            {1, 1},
            {0, 1},
        },
        {
            {0, 1, 0},
            {1, 1, 1},
        },
    },
    // PIECE 8
    {
        {
            {1, 1},
            {1, 1},
        },
    },
    // PIECE 9
    {
        {
            {1, 1, 0},
            {0, 1, 1},
        },
        {
            {0, 1},
            {1, 1},
            {1, 0}
        },
    },
    // PIECE 10
    {
        {
            {1},
            {1},
            {1},
            {1},
            {1},
        },
        {
            {1, 1, 1, 1, 1},
        },
    },
    // PIECE 11
    {
        {
            {0, 1},
            {0, 1},
            {0, 1},
            {1, 1},
        },
        {
            {1, 0, 0, 0},
            {1, 1, 1, 1},
        },
        {
            {1, 1},
            {1, 0},
            {1, 0},
            {1, 0},
        },
        {
            {1, 1, 1, 1},
            {0, 0, 0, 1},
        },
    },
    // PIECE 12
    {
        {
            {0, 1},
            {0, 1},
            {1, 1},
            {1, 0},
        },
        {
            {1, 1, 0, 0},
            {0, 1, 1, 1},
        },
        {
            {0, 1},
            {1, 1},
            {1, 0},
            {1, 0},
        },
        {
            {1, 1, 1, 0},
            {0, 0, 1, 1},
        },
    },
    // PIECE 13
    {
        {
            {0, 1},
            {1, 1},
            {1, 1},
        },
        {
            {1, 1, 0},
            {1, 1, 1},
        },
        {
            {1, 1},
            {1, 1},
            {1, 0},
        },
        {
            {1, 1, 1},
            {0, 1, 1},
        },
    },
    // PIECE 14
    {
        {
            {1, 1},
            {0, 1},
            {1, 1},
        },
        {
            {1, 0, 1},
            {1, 1, 1}
        },
        {
            {1, 1},
            {1, 0},
            {1, 1},
        },
        {
            {1, 1, 1},
            {1, 0, 1}
        },
    },
    // PIECE 15
    {
        {
            {1, 0},
            {1, 1},
            {1, 0},
            {1, 0},
        },
        {
            {1, 1, 1, 1},
            {0, 0, 1, 0},
        },
        {
            {0, 1},
            {0, 1},
            {1, 1},
            {0, 1},
        },
        {
            {0, 1, 0, 0},
            {1, 1, 1, 1},
        },
    },
    // PIECE 16
    {
        {
            {0, 1, 0},
            {0, 1, 0},
            {1, 1, 1},
        },
        {
            {1, 0, 0},
            {1, 1, 1},
            {1, 0, 0},
        },
        {
            {1, 1, 1},
            {0, 1, 0},
            {0, 1, 0},
        },
        {
            {0, 0, 1},
            {1, 1, 1},
            {0, 0, 1},
        },
    },
    // PIECE 17
    {
        {
            {1, 0, 0},
            {1, 0, 0},
            {1, 1, 1},
        },
        {
            {1, 1, 1},
            {1, 0, 0},
            {1, 0, 0},
        },
        {
            {1, 1, 1},
            {0, 0, 1},
            {0, 0, 1},
        },
        {
            {0, 0, 1},
            {0, 0, 1},
            {1, 1, 1},
        }
    },
    // PIECE 18
    {
        {
            {1, 1, 0},
            {0, 1, 1},
            {0, 0, 1},
        },
        {
            {0, 0, 1},
            {0, 1, 1},
            {1, 1, 0},
        },
        {
            {1, 0, 0},
            {1, 1, 0},
            {0, 1, 1},
        },
        {
            {0, 1, 1},
            {1, 1, 0},
            {1, 0, 0},
        },
    },
    // PIECE 19
    {
        {
            {1, 0, 0},
            {1, 1, 1},
            {0, 0, 1},
        },
        {
            {0, 1, 1},
            {0, 1, 0},
            {1, 1, 0},
        },
    },
    // PIECE 20
    {
        {
            {1, 0, 0},
            {1, 1, 1},
            {0, 1, 0},
        },
        {
            {0, 1, 1},
            {1, 1, 0},
            {0, 1, 0},
        },
        {
            {0, 1, 0},
            {1, 1, 1},
            {0, 0, 1},
        },
        {
            {0, 1, 0},
            {0, 1, 1},
            {1, 1, 0},
        },
    },
    // PIECE 21
    {
        {
            {0, 1, 0},
            {1, 1, 1},
            {0, 1, 0},
        },
    }
};

// holds max_rotations, height, width of pieces
static int Piece_Info[21][3] = {
    {1, 1, 1},  // 1
    {2, 2, 1},  // 2
    {2, 3, 1},  // 3
    {4, 2, 2},  // 4
    {2, 4, 1},  // 5
    {4, 3, 2},  // 6
    {4, 3, 2},  // 7
    {1, 2, 2},  // 8
    {2, 2, 3},  // 9
    {2, 5, 1},  // 10
    {4, 4, 2},  // 11
    {4, 4, 2},  // 12
    {4, 3, 2},  // 13
    {4, 3, 2},  // 14
    {4, 4, 2},  // 15
    {4, 3, 3},  // 16
    {4, 3, 3},  // 17
    {4, 3, 3},  // 18
    {2, 3, 3},  // 19
    {4, 3, 3},  // 20
    {1, 3, 3},  // 21
};
